---
- name: Homelab
  hosts: prod
  become: true
  vars_files:
    - ./vars/docker-vars.yml
    - ./vars/hyperhdr-vars.yml
    - ./vars/hyperion-vars.yml
    - ./secrets/slack_code.yml

  pre_tasks:
    - name: PRE TASK | Ensure apt cache is up to date
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 10800
        upgrade: "yes"
      when:
        - ansible_facts.os_family == "Debian"

    - name: PRE TASK | Ensure Nala is installed on performant devices
      ansible.builtin.apt:
        name: nala
        state: present
      when:
        - ansible_memtotal_mb > 2000
        - ansible_facts.os_family == "Debian"

    # - name: PRE TASK | Ensure wifi is disabled on wired devices
    #   ansible.builtin.cron:
    #     name: "Disable wifi"
    #     special_time: reboot
    #     job: ifconfig wlan0 down
    #   when: "'hyperhdr' is not in ansible_hostname"

    - name: PRE TASK | Mount SMB shares
      ansible.builtin.shell:
        cmd: mount -a
      when: "'hyperhdr' is not in ansible_hostname"

  handlers:
    - name: HANDLER | Restart services
      community.docker.docker_compose_v2:
        project_src: /home/{{ ansible_user }}/homelab/{{ item }}/
        state: present
        recreate: always
      with_items:
        - "homer"
        - "homepage"
        - "portainer-traefik"

    - name: HANDLER | Restart PiHole
      community.docker.docker_compose_v2:
        project_src: /home/{{ ansible_user }}/homelab/pihole/pihole-docker/
        state: present
        recreate: always

    # - name: HANDLER | Restart sonos streaming

  tasks:
    - name: Setup Docker
      ansible.builtin.import_tasks:
        file: tasks/docker.yml
      when: "'hyperhdr' is not in ansible_hostname"

    - name: Clone Git Repos
      ansible.builtin.import_tasks:
        file: tasks/git-repo.yml
      when: "'hyperhdr' is not in ansible_hostname"

    - name: Prepare Home Assistant deployment
      ansible.builtin.import_tasks:
        file: tasks/home-assistant.yml
      when: "'rpi4-2' is in ansible_hostname"

    - name: Prepare Docker deployment
      ansible.builtin.import_tasks:
        file: tasks/docker-env.yml
      when: "'hyperhdr' is not in ansible_hostname"

    - name: Deploy Docker Containers
      ansible.builtin.import_tasks:
        file: tasks/docker-deploy.yml
      when: "'hyperhdr' is not in ansible_hostname"

    - name: Setup CD
      ansible.builtin.import_tasks:
        file: tasks/cd.yml
      when: "'rpi4-1' is in ansible_hostname"

    # - name: Deploy hyperhdr
    #   ansible.builtin.import_tasks:
    #     file: tasks/hyperhdr.yml
    #   when: "'hyperhdr' is in ansible_hostname"

    - name: Deploy hyperhdr
      ansible.builtin.import_role:
        name: aleksanderbl29.hyperhdr
      vars:
        disable_verification: true
      when: "'hyperhdr' is in ansible_hostname"

    - name: Deploy sonos-stream
      ansible.builtin.import_role:
        name: aleksanderbl29.sonos_stream
      vars:
        disable_verification: true
      when: "'hyperhdr' is in ansible_hostname"

    - name: Setup figurine
      ansible.builtin.import_role:
        name: ironicbadger.figurine
      when:
        - ansible_memtotal_mb > 2000

  post_tasks:
    # - name: POST TASK | Prune old Docker images and volumes
    #   community.docker.docker_prune:
    #     containers: true
    #     images: true
    #     networks: true
    #     volumes: true
    #     builder_cache: true

    - name: POST TASK | Purge old Docker images
      ansible.builtin.command:
        cmd: docker system prune --all --force --volumes
      # changed_when: false
      when: "'hyperhdr' is not in ansible_hostname"

    - name: POST TASK | Get uptime
      ansible.builtin.command:
        cmd: uptime
      changed_when: false
      register: uptime

    - name: POST TASK | Print uptime
      ansible.builtin.debug:
        msg: "{{ uptime.stdout }}"

    - name: POST TASK | Get temperature of devices
      ansible.builtin.command:
        cmd: vcgencmd measure_temp
      changed_when: false
      register: temperature

    - name: POST TASK | Print temperature
      ansible.builtin.debug:
        msg: "{{ temperature.stdout }}"

    - name: POST TASK | Check voltage throttling
      ansible.builtin.command:
        cmd: vcgencmd get_throttled
      changed_when: false
      register: throttling

    - name: POST TASK | Print voltage throttling
      ansible.builtin.debug:
        msg: "{{ throttling.stdout }}"

    - name: POST TASK | Send Slack notification
      community.general.slack:
        token: "{{ slack_webhook }}"
        msg: "Run on {{ ansible_hostname }} complete and the device is at {{ temperature.stdout }}"
        channel: "#ansible"
        username: "Ansible"
